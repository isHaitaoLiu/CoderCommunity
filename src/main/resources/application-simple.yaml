# 请将此文件修改为application.yaml，并填写xxx所占用的参数

spring:
  datasource:
    url: jdbc:mysql://xxx:3306/codercommunity     # mysql配置的地址
    username: xxx      # mysql用户名
    password: xxx      # mysql密码
    type: com.alibaba.druid.pool.DruidDataSource
  flyway:
    enabled: true
    baseline-on-migrate: true  # 数据库不是空，需要设置为true
    clean-disabled: true # 禁止清理数据表
    locations: classpath:db/migration
    baseline-version: 1
  redis:
    host: xxx      # redis配置的地址
    port: 6379
    database: 1
    connect-timeout: 10000ms
    password: xxx
  kafka:
    bootstrap-servers: xxx:9092,xxx:9093,xxx:9094   # kafka配置的地址
    producer:
      client-id: sakura-producer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      client-id: sakura-consumer
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      enable-auto-commit: true
      auto-offset-reset: earliest


github:
  client:
    redirect-url: http://xxx:8080/callback   # 应用的回调地址
    id: xxx        # github给的应用id
    secret: xxx    # github给的应用secret
    access-token-url: https://github.com/login/oauth/access_token
    user-info-url: https://api.github.com/user


mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true

logging:
  file:      # 日志记录位置
    name: logs/coderCommunity.log
  level:      # 日志级别
    root: info
  #    cug:
  #      cs:
  #        codercommunity:
  #          mapper: debug  # 可以为不同的模块定义不同的日志级别
  logback:
    rollingpolicy:
      max-file-size: 200MB   # 日志最大文件大小
      max-history: 30       # 日志记录的最大天数